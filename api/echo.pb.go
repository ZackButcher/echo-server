// Code generated by protoc-gen-go. DO NOT EDIT.
// source: echo.proto

package testv1

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import timestamp "github.com/golang/protobuf/ptypes/timestamp"
import _ "google.golang.org/genproto/googleapis/api/annotations"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type EchoRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Body                 []byte   `protobuf:"bytes,2,opt,name=body,proto3" json:"body,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EchoRequest) Reset()         { *m = EchoRequest{} }
func (m *EchoRequest) String() string { return proto.CompactTextString(m) }
func (*EchoRequest) ProtoMessage()    {}
func (*EchoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_echo_225a1d44dfe755ce, []int{0}
}
func (m *EchoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EchoRequest.Unmarshal(m, b)
}
func (m *EchoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EchoRequest.Marshal(b, m, deterministic)
}
func (dst *EchoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EchoRequest.Merge(dst, src)
}
func (m *EchoRequest) XXX_Size() int {
	return xxx_messageInfo_EchoRequest.Size(m)
}
func (m *EchoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EchoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EchoRequest proto.InternalMessageInfo

func (m *EchoRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *EchoRequest) GetBody() []byte {
	if m != nil {
		return m.Body
	}
	return nil
}

type EchoResponse struct {
	Id                   string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Body                 []byte               `protobuf:"bytes,2,opt,name=body,proto3" json:"body,omitempty"`
	ServerTime           *timestamp.Timestamp `protobuf:"bytes,3,opt,name=server_time,json=serverTime,proto3" json:"server_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *EchoResponse) Reset()         { *m = EchoResponse{} }
func (m *EchoResponse) String() string { return proto.CompactTextString(m) }
func (*EchoResponse) ProtoMessage()    {}
func (*EchoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_echo_225a1d44dfe755ce, []int{1}
}
func (m *EchoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EchoResponse.Unmarshal(m, b)
}
func (m *EchoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EchoResponse.Marshal(b, m, deterministic)
}
func (dst *EchoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EchoResponse.Merge(dst, src)
}
func (m *EchoResponse) XXX_Size() int {
	return xxx_messageInfo_EchoResponse.Size(m)
}
func (m *EchoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_EchoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_EchoResponse proto.InternalMessageInfo

func (m *EchoResponse) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *EchoResponse) GetBody() []byte {
	if m != nil {
		return m.Body
	}
	return nil
}

func (m *EchoResponse) GetServerTime() *timestamp.Timestamp {
	if m != nil {
		return m.ServerTime
	}
	return nil
}

func init() {
	proto.RegisterType((*EchoRequest)(nil), "api.EchoRequest")
	proto.RegisterType((*EchoResponse)(nil), "api.EchoResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ServiceClient is the client API for Service service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ServiceClient interface {
	Echo(ctx context.Context, in *EchoRequest, opts ...grpc.CallOption) (*EchoResponse, error)
}

type serviceClient struct {
	cc *grpc.ClientConn
}

func NewServiceClient(cc *grpc.ClientConn) ServiceClient {
	return &serviceClient{cc}
}

func (c *serviceClient) Echo(ctx context.Context, in *EchoRequest, opts ...grpc.CallOption) (*EchoResponse, error) {
	out := new(EchoResponse)
	err := c.cc.Invoke(ctx, "/api.Service/Echo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ServiceServer is the server API for Service service.
type ServiceServer interface {
	Echo(context.Context, *EchoRequest) (*EchoResponse, error)
}

func RegisterServiceServer(s *grpc.Server, srv ServiceServer) {
	s.RegisterService(&_Service_serviceDesc, srv)
}

func _Service_Echo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EchoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServiceServer).Echo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.Service/Echo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServiceServer).Echo(ctx, req.(*EchoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Service_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.Service",
	HandlerType: (*ServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Echo",
			Handler:    _Service_Echo_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "echo.proto",
}

func init() { proto.RegisterFile("echo.proto", fileDescriptor_echo_225a1d44dfe755ce) }

var fileDescriptor_echo_225a1d44dfe755ce = []byte{
	// 252 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x90, 0xc1, 0x4a, 0xc3, 0x40,
	0x10, 0x86, 0xd9, 0xb4, 0x56, 0x9d, 0x14, 0xa9, 0x7b, 0x0a, 0x8b, 0x60, 0xc8, 0x29, 0x78, 0xd8,
	0xd0, 0x7a, 0x53, 0xbc, 0x08, 0x82, 0xe7, 0xe8, 0xc9, 0x8b, 0x6c, 0x92, 0xb1, 0x5d, 0xb0, 0x99,
	0x35, 0xbb, 0x0d, 0x78, 0xf5, 0x15, 0x7c, 0x34, 0x5f, 0xc1, 0x07, 0x91, 0xcd, 0x5a, 0xc8, 0xb1,
	0xb7, 0x99, 0x7f, 0xfe, 0x9f, 0xff, 0x63, 0x00, 0xb0, 0xde, 0x90, 0x34, 0x1d, 0x39, 0xe2, 0x13,
	0x65, 0xb4, 0xb8, 0x58, 0x13, 0xad, 0xdf, 0xb1, 0x50, 0x46, 0x17, 0xaa, 0x6d, 0xc9, 0x29, 0xa7,
	0xa9, 0xb5, 0xc1, 0x22, 0x2e, 0xff, 0xaf, 0xc3, 0x56, 0xed, 0xde, 0x0a, 0xa7, 0xb7, 0x68, 0x9d,
	0xda, 0x9a, 0x60, 0xc8, 0x96, 0x10, 0x3f, 0xd4, 0x1b, 0x2a, 0xf1, 0x63, 0x87, 0xd6, 0xf1, 0x33,
	0x88, 0x74, 0x93, 0xb0, 0x94, 0xe5, 0xa7, 0x65, 0xa4, 0x1b, 0xce, 0x61, 0x5a, 0x51, 0xf3, 0x99,
	0x44, 0x29, 0xcb, 0xe7, 0xe5, 0x30, 0x67, 0x04, 0xf3, 0x10, 0xb1, 0x86, 0x5a, 0x8b, 0x87, 0x64,
	0xf8, 0x2d, 0xc4, 0x16, 0xbb, 0x1e, 0xbb, 0x57, 0x0f, 0x90, 0x4c, 0x52, 0x96, 0xc7, 0x2b, 0x21,
	0x03, 0x9d, 0xdc, 0xd3, 0xc9, 0xe7, 0x3d, 0x5d, 0x09, 0xc1, 0xee, 0x85, 0xd5, 0x23, 0x1c, 0x3f,
	0x61, 0xd7, 0xeb, 0x1a, 0xf9, 0x1d, 0x4c, 0x7d, 0x37, 0x5f, 0x48, 0x65, 0xb4, 0x1c, 0x91, 0x8b,
	0xf3, 0x91, 0x12, 0xc0, 0xb2, 0xc5, 0xd7, 0xcf, 0xef, 0x77, 0x04, 0xe2, 0xa8, 0xf0, 0x4f, 0xbb,
	0x61, 0x57, 0xf7, 0x27, 0x2f, 0x33, 0x87, 0xd6, 0xf5, 0xcb, 0x6a, 0x36, 0x74, 0x5e, 0xff, 0x05,
	0x00, 0x00, 0xff, 0xff, 0x33, 0xb0, 0x2d, 0x37, 0x50, 0x01, 0x00, 0x00,
}
